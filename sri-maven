pipeline {
 agent any

 environment {
  JAVA6_HOME = tool 'JDK6'
  JAVA7_HOME = tool 'JDK8'
  JAVA8_HOME = tool 'JDK8'
  JAVA_HOME = tool 'JDK8'
  M2_HOME = tool 'M3'
  M2_SETTING = '9c4e4247-9cc2-4391-8ffc-fe21d5caabe8'
 }
 stages {
  stage('Display Environment') {
   steps {
    sh 'printenv'
   }
  }
  stage('Preparation') { // for display purposes
   steps {
    // Get some code from a SVN repository
    checkout([$class: 'SubversionSCM', additionalCredentials: [],
     excludedCommitMessages: '', excludedRegions: '', excludedRevprop: '',
     excludedUsers: '', filterChangelog: false, ignoreDirPropChanges: false,
     includedRegions: '', locations: [
      [credentialsId: 'SVN',
       depthOption: 'infinity', ignoreExternalsOption: true, local: '.',
       remote: 'https://someurl/project/trunk'
      ]
     ],
     quietOperation: true, workspaceUpdater: [$class: 'UpdateUpdater']
    ])
   }
  }
  stage('Build') {
   steps {
    // Run the maven build
    withMaven(
     // Maven installation declared in the Jenkins "Global Tool Configuration"
     maven: 'M3',
     // Maven settings.xml file defined with the Jenkins Config File Provider Plugin
     // Maven settings and global settings can also be defined in Jenkins Global Tools Configuration
     globalMavenSettingsConfig: env.M2_SETTING) {
     // Run the maven build
     sh "mvn clean install -Dmaven.test.skip=true"
    }
   }
  }
  stage('Test') {
   steps {
    // Run the maven build
    withMaven(
     // Maven installation declared in the Jenkins "Global Tool Configuration"
     maven: 'M3',
     // Maven settings.xml file defined with the Jenkins Config File Provider Plugin
     // Maven settings and global settings can also be defined in Jenkins Global Tools Configuration
     globalMavenSettingsConfig: env.M2_SETTING) {
     // Run the test
     sh "mvn test"
    }
   }
  }
  stage('Results') {
   steps {
    junit '**/target/surefire-reports/TEST-*.xml'
    archive 'target/*.jar'
   }
  }
 }
}
